from numpy import genfromtxt
import textwrap 
import argparse
import matplotlib.pyplot as plt
import numpy as np
import sys

"""
Error files need to be formated as one column file
This column contain the mean error of each flight

"""

def plot_flight_error(error_file_name):
    num_lines = sum(1 for line in open(error_file_name))
    print (num_lines)
    
    y = np.loadtxt(error_file_name)
    x = np.arange(y.size)
    
    print(y)
    
    z = np.mean(y)
    
    print ("error standard deviation : ", np.std(y))
    
    print(z)
    #plt.ylim(-1, +9)
    
    plt.plot(x, y, color='blue')
    
    
    plt.xlabel('Number of flight')
    plt.ylabel('Error of deformation combined totatly in m')
    
    
    fig = plt.subplot()
    
    #fig.savefig("test.png")
    plt.show()

"""
Count files need to be formated as one column file
This column contain the number of steps of each flight
"""

def plot_flight_count(count_file_name):
    
    num_lines = sum(1 for line in open(count_file_name))
    print (num_lines)
    
    y = np.loadtxt(count_file_name)
    x = np.arange(y.size)
    
    z = np.mean(y)
    print ("count deviation: ", np.std(y) )
    print(z)
    
    plt.plot(x, y, color='blue')
    
    plt.xlabel('Number of flights')
    plt.ylabel('Controller Counts before deformation')
    
    #plt.title("Plot the deformation error according to the number of action ")
    
    plt.savefig("count_high_res.esp", format='eps', dpi=1000)
    plt.show()


def plot_histogram(histogram_file_name):
    
    x = np.loadtxt()
    y = np.arange()
    
    plt.xlabel('Number of time steps')
    plt.ylabel('Frequency')
    
    plt.savefig("count_high_res.esp", format='eps', dpi=1000)
    plt.show()


   
if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        prog='Plotting script',
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description=textwrap.dedent('''\
        PLotting script!
        --------------------------------
        This script is used to plot the result generated by the
        quadcopters in the simulator
        It can be used to plot one of the files, 
        or all of them at the same time.
        You have to provide the file format as described in the above comments.
        '''))
    
    parser.add_argument('error_file_name', type=str)
    parser.add_argument('count_file_name', type=str)
    parser.add_argument('histogram_file_name', type=str)
    
    args = parser.parse_args()

    if len(sys.argv)==1:
        parser.print_help(sys.stderr)
        sys.exit(1)

    
    if args.error_file_name:
        plot_flight_error(args.error_file_name)

    if args.count_file_name:    
        plot_flight_count(args.count_file_name)

    if args.histogram_file_name:   
        plot_histogram(args.histogram_file_name)


    
